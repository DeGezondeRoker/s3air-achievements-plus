// The main function of rendering all items inside the menu, except for the background, since it is called inside the main loop.
function void AchievementsPlus.Menu.popup.items()
{
	s16 px = getScreenWidth() / 0x02
	s16 py = getScreenHeight() / 0x02
	
	AchievementsPlus.Menu.popup.items.hotkeysPanel(px, py)
	
	AchievementsPlus.Menu.popup.items.title(px, py)
	AchievementsPlus.Menu.popup.items.content(px, py)
}


// The main function of rendering the hot-keys panel.
function void AchievementsPlus.Menu.popup.items.hotkeysPanel(s16 px, s16 py)
{
	px -= 110
	py += 50
	
	AchievementsPlus.Menu.achievements.items.hotkeysPanel.drawHotkey("Start", "OK", px, py, 0xf0f0)
	px += 74	// Sprite width
	px += 0x04	// Addition space
	
	string tempValue0 = achievementsplus.popupMenu.tempValue1 == POPUP_DEBUG_MODE_ENABLED ? "Main menu" : (achievementsplus.popupMenu.tempValue1 == POPUP_OPTIONS_YOU_ARE_SURE ? "Cancel" : "Close")
	AchievementsPlus.Menu.achievements.items.hotkeysPanel.drawHotkey("B", tempValue0, px, py, 0xf0f0)
}


// The main function of rendering the title.
function void AchievementsPlus.Menu.popup.items.title(s16 px, s16 py)
{
	py -= 50
	AchievementsPlus.TextManager.drawTextWithOutline(px, py, achievementsplus.popupMenu.tempValue0, FONT_OXYSMALL, FORMAT_UPPERCASE, ALIGN_CENTER, 0x01, 0xffffffff, 0x0041aaff, 0xf0f0)
}


// The function renders popup content based on the current ID.
function void AchievementsPlus.Menu.popup.items.content(s16 px, s16 py)
{
	py -= 32
	
	// Content for options menu
	if (achievementsplus.popupMenu.tempValue1 == POPUP_ACHIEVEMENTS_OPTIONS)
	{
		string tempValue0 = achievementsplus.popupMenu.tempValue6 == 0x00 ? "All achievements" : (achievementsplus.popupMenu.tempValue6 == 0x01 ? "Retro only" : "Community only")
		AchievementsPlus.Menu.popup.items.content.drawOption(px, py, "Delete achievements data", tempValue0, true, 0xf0f0, achievementsplus.popupMenu.tempValue5, 0x00)
		py += 16
		
		AchievementsPlus.Menu.popup.items.content.drawOption(px, py, "Delete all data", "", false, 0xf0f0, achievementsplus.popupMenu.tempValue5, 0x01)
	}
	
	// Content for the confirmation menu
	else if (achievementsplus.popupMenu.tempValue1 == POPUP_OPTIONS_YOU_ARE_SURE)
	{
		AchievementsPlus.TextManager.drawText(px, py, "You are sure?", FONT_OXYTINY, FORMAT_NONE, ALIGN_CENTER, 0x01, 0x000000ff, 0xf0f0)
		py += 16
		AchievementsPlus.TextManager.drawText(px, py, "This action cannot be undone!", FONT_OXYTINY, FORMAT_NONE, ALIGN_CENTER, 0x01, 0xfe4e4eff, 0xf0f0)
	}
	
	// Content for the Debug enabled menu (Unfinished)
	else if (achievementsplus.popupMenu.tempValue1 == POPUP_DEBUG_MODE_ENABLED)
	{
		AchievementsPlus.TextManager.drawText(px, py, "text 1", FONT_OXYTINY, FORMAT_NONE, ALIGN_CENTER, 0x01, 0xfe4e4eff, 0xf0f0)
		py += 16
		AchievementsPlus.TextManager.drawText(px, py, "text 1!", FONT_OXYTINY, FORMAT_NONE, ALIGN_CENTER, 0x01, 0xfe4e4eff, 0xf0f0)
		py += 24
		
		AchievementsPlus.TextManager.drawText(px, py, "Press START to continue", FONT_OXYTINY, FORMAT_NONE, ALIGN_CENTER, 0x01, 0x000000ff, 0xf0f0)
	}
}


// Support option rendering function.
function void AchievementsPlus.Menu.popup.items.content.drawOption(s16 px, s16 py, string text, string option, bool carousel, u16 renderQueue, u8 selected, u8 target)
{
	u32 tempValue0 = selected == target ? 0x0041aaff : 0x000000ff
	
	AchievementsPlus.TextManager.drawText(px - 110, py, text, FONT_OXYTINY, FORMAT_NONE, ALIGN_RIGHT, 0x01, tempValue0, renderQueue)
	
	if (carousel)
	{
		AchievementsPlus.TextManager.drawText(px + 110, py, "< " + option + " >", FONT_OXYTINY, FORMAT_UPPERCASE, ALIGN_LEFT, 0x01, tempValue0, renderQueue)
	}
	else
	{
		AchievementsPlus.TextManager.drawText(px + 110, py, ">", FONT_OXYTINY, FORMAT_UPPERCASE, ALIGN_LEFT, 0x01, tempValue0, renderQueue)
	}
}


// The function draws the background for the menu.
function void AchievementsPlus.Menu.popup.background()
{
	// Render achievement menu items in the background for popup menu
	if (global.game_mode == 0x9a)
	{
		Renderer.drawCustomSprite("menu_background_5", getScreenWidth() / 0x02, 0x00, 0x00, SPRITE_FLAG_PRIO, 0xf0ef, 0x00, 0x60)
		Renderer.drawCustomSprite(stringformat("menu_background_%d", SETTING_ACHIEVEPLUS_MENU_BACKGROUND), getScreenWidth() / 0x02, 0x00, 0x00, SPRITE_FLAG_PRIO, 0xf0ef, 0x00, 0x30)
		
		AchievementsPlus.Menu.achievements.items()
		AchievementsPlus.Menu.achievements.background()
	}
	// In other cases, just a black background
	else
	{
		Renderer.drawCustomSprite("menu_background_5", getScreenWidth() / 0x02, 0x00, 0x00, 0x00, 0xf000)
	}
	
	// Jump-scare animation for background popup
	{
		if (achievementsplus.popupMenu.tempValue2 < 0x4700 && !achievementsplus.popupMenu.tempValue3)
			achievementsplus.popupMenu.tempValue2 += 0x700
		else
		{
			achievementsplus.popupMenu.tempValue3 |= 0x01
			if (achievementsplus.popupMenu.tempValue2 > 0x3400 && achievementsplus.popupMenu.tempValue3 == 0x01)
				achievementsplus.popupMenu.tempValue2 -= 0x1b3
			else
				achievementsplus.popupMenu.tempValue3 |= 0x02
		}
	}
	
	Renderer.drawCustomSpriteTinted("menu_popup_background", getScreenWidth() / 2, getScreenHeight() / 2, 0x00, SPRITE_FLAG_PRIO, 0xf0f0, 0x00, 0xffffffff, 0xcc00 + s32(achievementsplus.popupMenu.tempValue2))
}