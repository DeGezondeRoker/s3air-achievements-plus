// The main function is control management in the menu.
function void AchievementsPlus.Menu.popup.updateControl()
{
	// Control for the confirmation menu
	if (achievementsplus.popupMenu.tempValue1 == POPUP_OPTIONS_YOU_ARE_SURE)
	{
		// Close popup
		if (control.pad1.pressed & CONTROL_B)
			AchievementsPlus.Menu.popup.close()
		
		// Perform an action
		if (control.pad1.pressed & CONTROL_START)
		{
			playSound(0x63)
			
			if (achievementsplus.options.tempValue1 == 0x00)
			{
				if (achievementsplus.options.tempValue3 == 0x00)
					AchievementsPlus.AchivementsManager.cleanPersistentDataByRange(ACHIEVEMENTS_START_ID[0x00], ACHIEVEMENTS_LAST_ID[0x02], false)
				else if (achievementsplus.options.tempValue3 == 0x01)
					AchievementsPlus.AchivementsManager.cleanPersistentDataByRange(ACHIEVEMENTS_START_ID[0x01], ACHIEVEMENTS_LAST_ID[0x01], false)
				else if (achievementsplus.options.tempValue3 == 0x02)
					AchievementsPlus.AchivementsManager.cleanPersistentDataByRange(ACHIEVEMENTS_START_ID[0x02], ACHIEVEMENTS_LAST_ID[0x02], false)
			}
			else if (achievementsplus.options.tempValue1 == 0x01)
			{
				AchievementsPlus.RewardsManager.cleanPersistendData()
				AchievementsPlus.AchivementsManager.cleanPersistentDataByRange(ACHIEVEMENTS_START_ID[0x00], ACHIEVEMENTS_LAST_ID[0x02], true)
			}
			
			// Go to Data Select menu
			AchievementsPlus.Menu.achievements.setupTabs_rewardsAvailable()
			global.game_mode = 0x4c
			
			// Close popup menu
			AchievementsPlus.Menu.popup.close()
		}
		
		// Finish the function on this
		return
	}
	
	// Control for the Debug mode is enabled and Game via Level select menu
	else if (achievementsplus.popupMenu.tempValue1 == POPUP_VIA_LEVEL_SELECT)
	{
		// Close popup
		if (control.pad1.pressed & (CONTROL_START | CONTROL_B))
		{
			AchievementsPlus.Menu.popup.close()
			achievementsplus.popupMenu.tempValue7 |= 0x100
		}
		
		// Finish the function on this
		return
	}
	
	// Control for the Debug mode enabled menu
	else if (achievementsplus.popupMenu.tempValue1 == POPUP_DEBUG_MODE_ENABLED)
	{
		// Close popup (Actually, back to the Main menu)
		if (control.pad1.pressed & CONTROL_B)
		{
			Game.returnToMainMenu()
			AchievementsPlus.Menu.popup.close()
		}
		
		// Close popup
		if (control.pad1.pressed & CONTROL_START)
		{
			AchievementsPlus.Menu.popup.close()
			achievementsplus.popupMenu.tempValue7 |= 0x1000
		}
		
		// Finish the function on this
		return
	}
	
	// Content for the Wall unlock menu
	else if (achievementsplus.popupMenu.tempValue1 == POPUP_WALL_UNLOCK)
	{
		// Close popup
		if (control.pad1.pressed & CONTROL_B)
			AchievementsPlus.Menu.popup.close()
		
		// Close popup
		if (control.pad1.pressed & CONTROL_START)
		{
			bool tempValue0 = AchievementsPlus.RewardsManager.paidCoins(u8[achievementsplus.sharedMemory.wallsAddress + 0x100])
			
			if (tempValue0)
			{
				tempValue0
				u8 tempValue1 = u8[achievementsplus.sharedMemory.wallsAddress + 0x101]
				u8 tempValue2 = u8[achievementsplus.sharedMemory.wallsAddress + tempValue1]
				
				if (tempValue2 == 0x00)
					u8[achievementsplus.sharedMemory.wallsAddress + tempValue1] = 0xff
				else
				{
					u8[achievementsplus.sharedMemory.wallsAddress + tempValue1] = 0xff
					AchievementsPlus.WallManager.savePersistentData()
				}
				
				// Close popup
				AchievementsPlus.Menu.popup.close()
			}
		}
		
		// Finish the function on this
		return
	}
	
	// Control for the Not Enough Coins menu
	else if (achievementsplus.popupMenu.tempValue1 == POPUP_NOT_ENOUGH_COINS)
	{
		// Close popup
		if (control.pad1.pressed & (CONTROL_START | CONTROL_B))
			AchievementsPlus.Menu.popup.close()
	}
	
	// Failsave close popup
	if (control.pad1.pressed & CONTROL_B)
		AchievementsPlus.Menu.popup.close()
}


// Shows popup warnings about Debug mode enabled or Game via Level select.
function void AchievementsPlus.Menu.popup.updateWarnings()
{
	if (!AchievementsPlus.AchivementsManager.isAchievementsEnabled() && SETTING_ACHIEVEPLUS_WARNING_MESSAGES)
	{
		if (achievementsplus.level_select.tempValue0 & 0x01 && !(achievementsplus.popupMenu.tempValue7 & 0x100))
			AchievementsPlus.Menu.popup.show(POPUP_VIA_LEVEL_SELECT, "Woah... Wait!")
		
		else if (Game.getSetting(SETTING_DEBUG_MODE) && !(achievementsplus.popupMenu.tempValue7 & 0x1000))
			AchievementsPlus.Menu.popup.show(POPUP_DEBUG_MODE_ENABLED, "Debug mode is enabled...")
	}
}


// The main function of the update.
function void AchievementsPlus.Menu.popup.update()
{
	if (!achievementsplus.popupMenu.tempValue4)
		return
	
	syncZ80_variantB(0x01)
	AchievementsPlus.Menu.popup.setup()
	syncZ80_variantB(0x80)
	
	achievementsplus.popupMenu.tempValue4 = 0x00
}


// The function defines the ID and title for the popup and shows it.
function void AchievementsPlus.Menu.popup.show(u8 id, string title)
{
	achievementsplus.popupMenu.tempValue2 = 0x00
	achievementsplus.popupMenu.tempValue3 = 0x00
	
	achievementsplus.popupMenu.tempValue0 = title
	achievementsplus.popupMenu.tempValue1 = id
	
	Audio.playAudio("sfx_Resume", AudioContext.CONTEXT_SOUND)
	achievementsplus.popupMenu.tempValue4 = 0x01
}


// The function resets some variables and closes popup.
function void AchievementsPlus.Menu.popup.close()
{
	Audio.playAudio("sfx_BackButton", AudioContext.CONTEXT_SOUND)
	achievementsplus.popupMenu.tempValue4 = 0x00
}