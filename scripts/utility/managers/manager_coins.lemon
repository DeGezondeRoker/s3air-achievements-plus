// The main function of updating achievement rewards and assigning rewards to the Coins counter.
function void AchievementsPlus.RewardsManager.update()
{
	if (!achievementsplus.coinRewards.tempValue2)
		return
	
	u8 tempValue0 = 0x01
	u32 tempValue1 = 0x00
	
	if (achievementsplus.coinRewards.tempValue0 == achievementsplus.coinRewards.tempValue1)
	{
		u32 tempValue3 = AchievementsPlus.AchivementsManager.getAchievementAddress(achievementsplus.achievements.buttonselected)
		u32[tempValue3] |= FLAG_REWARD_CLAIMED
		AchievementsPlus.AchivementsManager.savePersistentData()
	}
	
	if (achievementsplus.coinRewards.tempValue0 != 0x00)
	{
		u32 tempValue2 = min(tempValue0, achievementsplus.coinRewards.tempValue0)
		tempValue1 += tempValue2
		achievementsplus.coinRewards.tempValue0 -= tempValue2
	}
	
	if (tempValue1 != 0x00)
	{
		AchievementsPlus.RewardsManager.addCoins(tempValue1)
		
		if ((level.framecounter & 0x03) == 0x00)
			playSound(SFX_CLICK)
	}
	else
	{
		playSound(0xb0)
		
		AchievementsPlus.RewardsManager.setupForCoinRewards()	// Override reward for current achievement
		AchievementsPlus.Menu.achievements.setupTabs_rewardsAvailable()	// Override the total number of achievements for which you need to take the reward
		
		achievementsplus.coinRewards.tempValue2 = 0x00
	}
}


// Loads data stored in Persistent Data into Shared Memory.
function void AchievementsPlus.RewardsManager.savePersistendData()
{
	SRAM.save(achievementsplus.sharedMemory.coinsAddress, 0x0ffc, 0x04)
	System.savePersistentData(achievementsplus.sharedMemory.coinsAddress, "AchievementsPlus_CoinsSaved", 0x04)
}


// Loads data stored in Persistent Data into Shared Memory
function void AchievementsPlus.RewardsManager.loadPersistendData()
{
	SRAM.load(achievementsplus.sharedMemory.coinsAddress, 0x0ffc, 0x04)
	System.loadPersistentData(achievementsplus.sharedMemory.coinsAddress, "AchievementsPlus_CoinsSaved", 0x04)
}


// Adds the specified Coins value to Shared Memory and stores the new value in Persistent Data.
function bool AchievementsPlus.RewardsManager.addCoins(u16 value)
{
	u32 tempValue0 = achievementsplus.sharedMemory.coinsSaved
	u16 tempValue1 = abs(value)
	
	bool tempValue2 = (tempValue0 + tempValue1) >= 65535
	bool tempValue3 = (tempValue0 + tempValue1) <= 0x00
	
	if (tempValue2 || tempValue3)
	{
		assert(false, "(200) An unexpected error has occurred. Read the documentation for using Coins.")
		return false
	}
	
	achievementsplus.sharedMemory.coinsSaved += tempValue1
	AchievementsPlus.RewardsManager.savePersistendData()
	return true
}


// Pays the specified Coins value from Shared Memory and stores the new value in Persistent Data.
function bool AchievementsPlus.RewardsManager.paidCoins(u16 value)
{
	u32 tempValue0 = achievementsplus.sharedMemory.coinsSaved
	u16 tempValue1 = abs(value)
	
	bool tempValue2 = (tempValue0 - tempValue1) >= 65535
	bool tempValue3 = (tempValue0 - tempValue1) <= 0x00
	
	if (tempValue2 || tempValue3)
	{
		//assert(false, "(201) An unexpected error has occurred. Read the documentation for using Coins.")
		achievementsplus.popupMenu.tempValue8 = abs(tempValue0 - tempValue1)
		AchievementsPlus.Menu.popup.show(POPUP_NOT_ENOUGH_COINS, "Purchase unsuccessful (201)")
		return false
	}
	
	achievementsplus.sharedMemory.coinsSaved -= tempValue1
	AchievementsPlus.RewardsManager.savePersistendData()
	return true
}


// - - - - - - - - - - - - - - - - - - - - - - - - - - - //
// Support tools
// - - - - - - - - - - - - - - - - - - - - - - - - - - - //


// Clean data stored in Persistent Data into Shared Memory
function void AchievementsPlus.RewardsManager.cleanPersistendData()
{
	achievementsplus.sharedMemory.coinsSaved = 0x00
	AchievementsPlus.RewardsManager.savePersistendData()
}


// The function adds a returns value to the reward of the specified achievement.
function u8 AchievementsPlus.RewardsManager.getAdditionalCoins(u16 achievementID)
{
	// Returns 0 by default
	return 0x00
}


// Sets the reward for the selected achievement from the list.
function void AchievementsPlus.RewardsManager.setupForCoinRewards()
{
	u32 tempValue0 = AchievementsPlus.AchivementsManager.getAchievementValue(achievementsplus.achievements.buttonselected)
	u32 tempValue1 = tempValue0 | FLAG_REWARD_CLAIMED	// Reward claimed
	
	u8 tempValue2 = AchievementsPlus.AchivementsManager.getDecimalStars(achievementsplus.achievements.buttonselected)
	s32 tempValue3 = (!tempValue2 ? 0x02 : 0x00) + tempValue2 * 12 / 0x03
	tempValue3 += min(abs(AchievementsPlus.RewardsManager.getAdditionalCoins(achievementsplus.achievements.buttonselected)), 20)
	
	bool tempValue4 = AchievementsPlus.AchivementsManager.isAchievementComplete(achievementsplus.achievements.buttonselected)	// Achievement complete
	
	if (tempValue0 == tempValue1 || !tempValue4 || achievementsplus.achievements.totalButtons == 0x00)
	{
		achievementsplus.coinRewards.tempValue0 = 0x00
		achievementsplus.coinRewards.tempValue1 = tempValue3
		return
	}
	
	achievementsplus.coinRewards.tempValue0 = tempValue3
	achievementsplus.coinRewards.tempValue1 = tempValue3
} 